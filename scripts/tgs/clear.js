import fs from 'fs';
import path from 'path';

import { DEST_DIR, SAVE_DIR, SRC_DIR } from './constants.js';

// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
// üßπ  –û—á–∏—Å—Ç–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–æ–≤ —Å –∏—Å–∫–ª—é—á–µ–Ω–∏—è–º–∏
// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
/** –§–∞–π–ª—ã (relative‚ÄØ‚Üí‚ÄØabsolute), –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–ª—å–∑—è —Ç—Ä–æ–≥–∞—Ç—å */
const keep = new Set([
  path.join(SRC_DIR, 'emoji-for-test.tgs'),
  path.join(DEST_DIR, 'emoji-for-test.json'),
]);

/**
 * –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —á–∏—Å—Ç–∏–º dir.
 * –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã, –Ω–µ –≤—Ö–æ–¥—è—â–∏–µ –≤ keep; —É–¥–∞–ª—è–µ–º –ø—É—Å—Ç—ã–µ –ø–∞–ø–∫–∏.
 */
function walk(dir) {
  for (const entry of fs.readdirSync(dir, { withFileTypes: true })) {
    const full = path.join(dir, entry.name);

    if (keep.has(full)) continue;

    if (entry.isDirectory()) {
      walk(full);
      if (fs.readdirSync(full).length === 0) fs.rmdirSync(full);
      continue;
    }

    const isFromAssets = full.startsWith(SRC_DIR);

    if (isFromAssets) {
      const rel = path.relative(SRC_DIR, full);
      const dest = path.join(SAVE_DIR, rel);

      fs.mkdirSync(path.dirname(dest), { recursive: true });
      fs.renameSync(full, dest);
      console.log(`üíæ Saved: ${rel}`);
    } else {
      fs.unlinkSync(full);
    }
  }
}

fs.mkdirSync(SAVE_DIR, { recursive: true });

[SRC_DIR, DEST_DIR].forEach((dir) => {
  if (fs.existsSync(dir)) walk(dir);
  else fs.mkdirSync(dir, { recursive: true });
});

console.log('‚úÖ –ö–∞—Ç–∞–ª–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã; —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ assets —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ ‚Äúsaved‚Äù.\n');
